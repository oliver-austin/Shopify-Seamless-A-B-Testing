{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6905e9cc9a0aa9262aa9.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Button, EmptyState, Form, FormLayout, Layout, Page, TextField } from '@shopify/polaris';\r\nimport Cookies from 'js-cookie';\r\nimport { ResourcePicker } from '@shopify/app-bridge-react';\r\nimport store from 'store-js';\r\nimport ResourceListWithProducts from '../components/ResourceList';\r\nimport CreateTestVariant from '../components/CreateTestVariant';\r\nimport { Route, BrowserRouter, Redirect } from 'react-router'\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\r\n\r\nclass Index extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      resourcePickerOpen: false,\r\n      variantSelected: false,\r\n    };\r\n    this.childHandler = this.childHandler.bind(this);\r\n  }\r\n\r\n  childHandler(variantSelectedFromChild) {\r\n    this.setState({\r\n      variantSelected: variantSelectedFromChild\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const emptyState = !store.get('ids');\r\n    return (\r\n        (this.variantSelected ? (<Redirect to='/create-test' />) : (\r\n            <Page\r\n            primaryAction={{\r\n              content: 'Select product to test',\r\n              onAction: () => this.setState({ resourcePickerOpen: true }),\r\n            }}\r\n        >\r\n          <ResourcePicker\r\n              resourceType=\"Product\"\r\n              showVariants={false}\r\n              allowMultiple={false}\r\n              open={this.state.resourcePickerOpen}\r\n              onSelection={(resources) => this.handleSelection(resources)}\r\n              onCancel={() => this.setState({ resourcePickerOpen: false })}\r\n          />\r\n          {emptyState ? (\r\n              <Layout>\r\n                <EmptyState\r\n                    heading=\"Test product variants\"\r\n                    action={{\r\n                      content: 'Select products',\r\n                      onAction: () => this.setState({ resourcePickerOpen: true }),\r\n                    }}\r\n                    image={img}\r\n                >\r\n                  <p>Select a product to create a test variant.</p>\r\n                </EmptyState>\r\n              </Layout>\r\n          ) :(\r\n              <ResourceListWithProducts />\r\n\r\n              )}\r\n        </Page>)\r\n        )\r\n    );\r\n  }\r\n\r\n  handleSelection = (resources) => {\r\n    const idsFromResources = resources.selection.map((product) => product.id);\r\n    this.setState({ resourcePickerOpen: false, variantSelected: true, });\r\n    store.set('ids', idsFromResources);\r\n    document.location.href = '/create-test';\r\n  };\r\n}\r\n\r\nexport default Index;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAwDA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AA3DA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AANA;AAkBA;;;;AAtDA;AACA;AA+DA;;;;A","sourceRoot":""}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        description\\n        id\\n        totalVariants\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 10) {\\n          edges {\\n            node {\\n              price\\n              id\\n              image {\\n                originalSrc\\n                altText\\n              }\\n              displayName\\n              compareAtPrice\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query getShopID {\\n            shop{\\n                id\\n            }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Button, Caption, Card, Checkbox, DropZone, EmptyState, Form, FormLayout, Heading, Layout, Page, ResourceList, Select, Stack, Subheading, TextField, Thumbnail } from '@shopify/polaris';\nimport { Context } from \"@shopify/app-bridge-react\";\nimport { Redirect } from \"@shopify/app-bridge/actions\";\nimport store from \"store-js\";\nimport { Query } from \"react-apollo\";\nimport Product from \"../data_classes/product/Product\";\nimport Variant from \"../data_classes/variant/Variant\";\nimport Modal from \"@shopify/app-bridge-react/components/Modal\";\nimport ResourceListWithProducts from \"../components/ResourceList\";\nimport $ from \"jquery\"; //TODO: fetch all variants, not first 10\n\nvar GET_SHOP_ID = gql(_templateObject());\nvar GET_PRODUCT_BY_ID = gql(_templateObject2());\n\nvar CreateTestVariant =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateTestVariant, _React$Component);\n\n  function CreateTestVariant(props) {\n    var _this;\n\n    _classCallCheck(this, CreateTestVariant);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateTestVariant).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"redirect\", function () {\n      _this.props.variantCreated(false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get('item');\n      var price = item.variants.edges[0].node.price;\n      var variantId = item.variants.edges[0].node.id;\n      var discounter = price * 0.1;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return (price - discounter).toFixed(2);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTextChange\", function (value) {\n      _this.setState({\n        value: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleProductOrVariantSelectChange\", function (data, newValue) {\n      _this.setState({\n        productTitle: data.nodes[0].title,\n        productDescription: data.nodes[0].description,\n        productSelected: newValue,\n        variantTitle: data.nodes[0].variants.edges[0].node.displayName,\n        variantPrice: data.nodes[0].variants.edges[0].node.price,\n        variantDiscount: data.nodes[0].variants.edges[0].node.compareAtPrice\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVariantSelectChange\", function (variantsArray, newValue) {\n      newValue = _parseInt(newValue, 10);\n\n      _this.setState({\n        variantSelected: newValue,\n        variantTitle: variantsArray[newValue].node.displayName,\n        variantPrice: variantsArray[newValue].node.price,\n        variantDiscount: variantsArray[newValue].node.compareAtPrice\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleProductOrVariantSubmit\", function (data, shopID) {\n      //data param is retrieved from gql, \"old data\", new data is stored in this.state\n      //send all relevant fields form old and new data with request\n      switch (_this.state.productSelected) {\n        case \"product\":\n          var product = new Product(data.nodes[0].id, shopID, data.nodes[0].title, data.nodes[0].images.edges[0].node.originalSrc, data.nodes[0].description, 0, 0, 0, _this.state.productTitle, _this.state.productImage, _this.state.productDescription, 0, 0, 0, 1);\n          $.ajax({\n            type: \"POST\",\n            url: \"/create-product-test\",\n            contentType: \"application/json; charset=utf-8\",\n            data: _JSON$stringify(product),\n            dataType: 'text'\n          });\n          break;\n\n        case \"variants\":\n          var variant = new Variant(data.nodes[0].variants.edges[_this.state.variantSelected].node.id, data.nodes[0].id, shopID, data.nodes[0].variants.edges[_this.state.variantSelected].node.displayName, data.nodes[0].variants.edges[_this.state.variantSelected].node.image ? data.nodes[0].variants.edges[_this.state.variantSelected].node.image.originalSrc : data.nodes[0].images.edges[0].node.originalSrc, data.nodes[0].variants.edges[_this.state.variantSelected].node.price, data.nodes[0].variants.edges[_this.state.variantSelected].node.compareAtPrice, 0, 0, 0, _this.state.variantTitle, _this.state.variantImage, _this.state.variantPrice, _this.state.variantDiscount, 0, 0, 0, 1);\n          $.ajax({\n            type: \"POST\",\n            url: \"/create-variant-test\",\n            contentType: \"application/json; charset=utf-8\",\n            data: _JSON$stringify(variant),\n            dataType: 'json'\n          });\n      }\n    });\n\n    _this.state = {\n      files: [],\n      productSelected: 'product',\n      variantSelected: 0,\n      productTitle: '',\n      productDescription: '',\n      productImage: '',\n      variantTitle: '',\n      variantImage: '',\n      variantPrice: '',\n      variantDiscount: ''\n    };\n    return _this;\n  }\n\n  _createClass(CreateTestVariant, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var productOrVariantSelectOptions = [{\n        label: 'Product',\n        value: 'product'\n      }, {\n        label: 'Variants',\n        value: 'variants'\n      }];\n      var app = this.context;\n      var files = this.state.files;\n      var validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n      console.log(this.state.files);\n\n      if (this.state.files.length != 0) {\n        console.log(window.URL.createObjectURL(this.state.files[0]));\n      }\n\n      var fileUpload = !files.length && React.createElement(DropZone.FileUpload, null);\n      var uploadedFiles = files.length > 0 && React.createElement(Stack, {\n        vertical: true\n      }, files.map(function (file, index) {\n        return React.createElement(Stack, {\n          alignment: \"center\",\n          key: index\n        }, React.createElement(Thumbnail, {\n          size: \"large\",\n          alt: file.name,\n          source: validImageTypes.indexOf(file.type) > 0 ? window.URL.createObjectURL(file) : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\n        }), React.createElement(\"div\", null, file.name, \" \", React.createElement(Caption, null, file.size, \" bytes\")));\n      }));\n      return React.createElement(Query, {\n        query: GET_PRODUCT_BY_ID,\n        variables: {\n          ids: store.get('ids')\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n\n        if (loading) {\n          return React.createElement(\"div\", null, \"Loading\\u2026\");\n        }\n\n        if (error) {\n          return React.createElement(\"div\", null, error.message);\n        }\n\n        var variantsArray = data.nodes[0].variants.edges;\n        var variantSelectOptions = [];\n        variantsArray.forEach(function (variant, index) {\n          variantSelectOptions.push({\n            label: variant.node.displayName,\n            value: index\n          });\n        });\n        return React.createElement(Query, {\n          query: GET_SHOP_ID\n        }, function (_ref2) {\n          var shop = _ref2.data.shop,\n              loading = _ref2.loading,\n              error = _ref2.error;\n\n          if (loading) {\n            return React.createElement(\"div\", null, \"Loading\\u2026\");\n          }\n\n          if (error) {\n            return React.createElement(\"div\", null, error.message);\n          }\n\n          console.log(\"ID\", shop.id);\n          return React.createElement(Page, {\n            primaryAction: {\n              content: 'Create A/B Test',\n              onAction: function onAction() {\n                return _this2.handleProductOrVariantSubmit(data, shop.id);\n              }\n            }\n          }, React.createElement(Select, {\n            label: \"Create test for:\",\n            disabled: false,\n            options: productOrVariantSelectOptions,\n            onChange: _this2.handleProductOrVariantSelectChange.bind(_this2, data),\n            value: _this2.state.productSelected\n          }), _this2.state.productSelected === 'product' ? React.createElement(Form, null, React.createElement(FormLayout, null, React.createElement(Stack, null, React.createElement(Thumbnail, {\n            size: \"large\",\n            source: data.nodes[0].images.edges[0] ? data.nodes[0].images.edges[0].node.originalSrc : '',\n            alt: data.nodes[0].images.edges[0] ? data.nodes[0].images.edges[0].node.altText : ''\n          }), React.createElement(DropZone, {\n            onDrop: function onDrop(files, acceptedFiles, rejectedFiles) {\n              _this2.setState({\n                files: [].concat(_toConsumableArray(_this2.state.files), _toConsumableArray(acceptedFiles))\n              });\n            }\n          }, uploadedFiles, fileUpload)), React.createElement(TextField, {\n            readOnly: false,\n            value: _this2.state.productTitle,\n            onChange: _this2.handleTextChange,\n            label: \"Product Name\",\n            type: \"text\"\n          }), React.createElement(TextField, {\n            readOnly: false,\n            value: _this2.state.productDescription,\n            onChange: _this2.handleTextChange,\n            label: \"Product Description\",\n            type: \"text\"\n          }))) : React.createElement(Form, null, React.createElement(FormLayout, null, React.createElement(Select, {\n            label: \"Select product variant to create test for:\",\n            disabled: false,\n            options: variantSelectOptions,\n            value: _this2.state.variantSelected,\n            onChange: _this2.handleVariantSelectChange.bind(_this2, variantsArray)\n          }), React.createElement(Stack, null, React.createElement(Thumbnail, {\n            size: \"large\",\n            source: data.nodes[0].variants.edges[_this2.state.variantSelected].node.image ? data.nodes[0].variants.edges[_this2.state.variantSelected].node.image.originalSrc : data.nodes[0].images.edges[0].node.originalSrc,\n            alt: data.nodes[0].variants.edges[_this2.state.variantSelected].node.image ? data.nodes[0].variants.edges[_this2.state.variantSelected].node.image.altText : data.nodes[0].images.edges[0].node.altText\n          }), React.createElement(DropZone, {\n            onDrop: function onDrop(files, acceptedFiles, rejectedFiles) {\n              _this2.setState({\n                files: [].concat(_toConsumableArray(_this2.state.files), _toConsumableArray(acceptedFiles))\n              });\n            }\n          }, uploadedFiles, fileUpload)), React.createElement(TextField, {\n            readOnly: false,\n            value: _this2.state.variantTitle,\n            onChange: _this2.handleTextChange,\n            label: \"Product Name\",\n            type: \"text\"\n          }), React.createElement(TextField, {\n            readOnly: false,\n            value: _this2.state.variantPrice,\n            onChange: _this2.handleTextChange,\n            label: \"Original Price\",\n            type: \"text\"\n          }), React.createElement(TextField, {\n            readOnly: false,\n            value: _this2.state.variantDiscount,\n            onChange: _this2.handleTextChange,\n            label: \"Discounted Price\",\n            type: \"text\"\n          }))));\n        });\n      });\n    }\n  }]);\n\n  return CreateTestVariant;\n}(React.Component);\n\n_defineProperty(CreateTestVariant, \"contextType\", Context);\n\nexport default CreateTestVariant;","map":{"version":3,"sources":["C:\\Users\\Oliver\\Shopify\\Seamless AB Testing\\pages\\create-test.js"],"names":["gql","Button","Caption","Card","Checkbox","DropZone","EmptyState","Form","FormLayout","Heading","Layout","Page","ResourceList","Select","Stack","Subheading","TextField","Thumbnail","Context","Redirect","store","Query","Product","Variant","Modal","ResourceListWithProducts","$","GET_SHOP_ID","GET_PRODUCT_BY_ID","CreateTestVariant","props","variantCreated","item","get","price","variants","edges","node","variantId","id","discounter","setState","toFixed","value","data","newValue","productTitle","nodes","title","productDescription","description","productSelected","variantTitle","displayName","variantPrice","variantDiscount","compareAtPrice","variantsArray","variantSelected","shopID","state","product","images","originalSrc","productImage","ajax","type","url","contentType","dataType","variant","image","variantImage","files","productOrVariantSelectOptions","label","app","context","validImageTypes","console","log","length","window","URL","createObjectURL","fileUpload","uploadedFiles","map","file","index","name","indexOf","size","ids","loading","error","message","variantSelectOptions","forEach","push","shop","content","onAction","handleProductOrVariantSubmit","handleProductOrVariantSelectChange","bind","altText","acceptedFiles","rejectedFiles","handleTextChange","handleVariantSelectChange","React","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { Button, Caption, Card, Checkbox, DropZone, EmptyState, Form, FormLayout, Heading, Layout, Page, ResourceList, Select, Stack, Subheading, TextField, Thumbnail } from '@shopify/polaris';\r\nimport {Context} from \"@shopify/app-bridge-react\";\r\nimport {Redirect} from \"@shopify/app-bridge/actions\";\r\nimport store from \"store-js\";\r\nimport {Query} from \"react-apollo\";\r\nimport Product from \"../data_classes/product/Product\"\r\nimport Variant from \"../data_classes/variant/Variant\"\r\nimport Modal from \"@shopify/app-bridge-react/components/Modal\";\r\nimport ResourceListWithProducts from \"../components/ResourceList\";\r\nimport $ from \"jquery\";\r\n\r\n//TODO: fetch all variants, not first 10\r\nconst GET_SHOP_ID = gql`\r\n    query getShopID {\r\n            shop{\r\n                id\r\n            }\r\n    }\r\n`;\r\nconst GET_PRODUCT_BY_ID = gql`\r\n  query getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n      ... on Product {\r\n        title\r\n        handle\r\n        description\r\n        id\r\n        totalVariants\r\n        images(first: 1) {\r\n          edges {\r\n            node {\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 10) {\r\n          edges {\r\n            node {\r\n              price\r\n              id\r\n              image {\r\n                originalSrc\r\n                altText\r\n              }\r\n              displayName\r\n              compareAtPrice\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass CreateTestVariant extends React.Component {\r\n    static contextType = Context;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            files: [],\r\n            productSelected: 'product',\r\n            variantSelected: 0,\r\n            productTitle: '',\r\n            productDescription: '',\r\n            productImage: '',\r\n            variantTitle: '',\r\n            variantImage: '',\r\n            variantPrice: '',\r\n            variantDiscount: ''\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        const productOrVariantSelectOptions = [{ label: 'Product', value: 'product' }, { label: 'Variants', value: 'variants' }];\r\n        const app = this.context;\r\n\r\n        const {files} = this.state;\r\n        const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\r\n        console.log(this.state.files);\r\n        if(this.state.files.length != 0){\r\n            console.log(window.URL.createObjectURL(this.state.files[0]));\r\n        }\r\n\r\n        const fileUpload = !files.length && <DropZone.FileUpload />;\r\n        const uploadedFiles = files.length > 0 && (\r\n\r\n            <Stack vertical>\r\n                {files.map((file, index) => (\r\n                    <Stack alignment=\"center\" key={index}>\r\n                        <Thumbnail\r\n                            size=\"large\"\r\n                            alt={file.name}\r\n                            source={\r\n                                validImageTypes.indexOf(file.type) > 0\r\n                                    ? window.URL.createObjectURL(file)\r\n                                    : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\r\n                            }\r\n                        />\r\n                        <div>\r\n                            {file.name} <Caption>{file.size} bytes</Caption>\r\n                        </div>\r\n                    </Stack>\r\n                ))}\r\n            </Stack>\r\n        );\r\n\r\n        return (\r\n            <Query query={GET_PRODUCT_BY_ID} variables={{ ids: store.get('ids') }}>\r\n                {({data, loading, error}) => {\r\n                    if (loading) { return <div>Loading…</div>; }\r\n                    if (error) { return <div>{error.message}</div>; }\r\n                    const variantsArray = data.nodes[0].variants.edges;\r\n                    const variantSelectOptions = [];\r\n                    variantsArray.forEach(function(variant, index) {\r\n                        variantSelectOptions.push({label: variant.node.displayName, value: index})\r\n                    });\r\n                    return (\r\n                        <Query query={GET_SHOP_ID}>\r\n                            {({data: { shop }, loading, error}) => {\r\n                                if (loading) {\r\n                                    return <div>Loading…</div>;\r\n                                }\r\n                                if (error) {\r\n                                    return <div>{error.message}</div>;\r\n                                }\r\n                                console.log(\"ID\", shop.id);\r\n\r\n                                return (\r\n                                    <Page\r\n                                        primaryAction={{\r\n                                            content: 'Create A/B Test',\r\n                                            onAction: () => this.handleProductOrVariantSubmit(data, shop.id),\r\n                                        }}\r\n                                    >\r\n                                        <Select\r\n                                            label=\"Create test for:\"\r\n                                            disabled={false}\r\n                                            options={productOrVariantSelectOptions}\r\n                                            onChange={this.handleProductOrVariantSelectChange.bind(this, data)}\r\n                                            value={this.state.productSelected}/>\r\n\r\n                                        {this.state.productSelected === 'product' ? (\r\n                                            <Form>\r\n                                                <FormLayout>\r\n                                                    <Stack>\r\n                                                        <Thumbnail\r\n                                                            size=\"large\"\r\n                                                            source={\r\n                                                                data.nodes[0].images.edges[0]\r\n                                                                    ? data.nodes[0].images.edges[0].node.originalSrc\r\n                                                                    : ''\r\n                                                            }\r\n                                                            alt={\r\n                                                                data.nodes[0].images.edges[0]\r\n                                                                    ? data.nodes[0].images.edges[0].node.altText\r\n                                                                    : ''\r\n                                                            }\r\n                                                        />\r\n\r\n                                                        <DropZone\r\n                                                            onDrop={(files, acceptedFiles, rejectedFiles) => {\r\n                                                                this.setState({files: [...this.state.files, ...acceptedFiles]});\r\n                                                            }}>\r\n                                                            {uploadedFiles}\r\n                                                            {fileUpload}\r\n                                                        </DropZone>\r\n                                                    </Stack>\r\n                                                    <TextField\r\n                                                        readOnly={false}\r\n                                                        value={this.state.productTitle}\r\n                                                        onChange={this.handleTextChange}\r\n                                                        label=\"Product Name\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                    <TextField\r\n                                                        readOnly={false}\r\n                                                        value={this.state.productDescription}\r\n                                                        onChange={this.handleTextChange}\r\n                                                        label=\"Product Description\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                </FormLayout>\r\n                                            </Form>\r\n\r\n                                        ) : (\r\n                                            <Form>\r\n                                                <FormLayout>\r\n                                                    <Select\r\n                                                        label=\"Select product variant to create test for:\"\r\n                                                        disabled={false}\r\n                                                        options={variantSelectOptions}\r\n                                                        value={this.state.variantSelected}\r\n                                                        onChange={this.handleVariantSelectChange.bind(this, variantsArray)}\r\n                                                    />\r\n                                                    <Stack>\r\n\r\n                                                        <Thumbnail\r\n                                                            size=\"large\"\r\n                                                            source={\r\n                                                                data.nodes[0].variants.edges[this.state.variantSelected].node.image\r\n                                                                    ? data.nodes[0].variants.edges[this.state.variantSelected].node.image.originalSrc\r\n                                                                    : data.nodes[0].images.edges[0].node.originalSrc\r\n                                                            }\r\n                                                            alt={\r\n                                                                data.nodes[0].variants.edges[this.state.variantSelected].node.image\r\n                                                                    ? data.nodes[0].variants.edges[this.state.variantSelected].node.image.altText\r\n                                                                    : data.nodes[0].images.edges[0].node.altText\r\n                                                            }\r\n                                                        />\r\n\r\n                                                        <DropZone\r\n                                                            onDrop={(files, acceptedFiles, rejectedFiles) => {\r\n                                                                this.setState({files: [...this.state.files, ...acceptedFiles]});\r\n                                                            }}>\r\n                                                            {uploadedFiles}\r\n                                                            {fileUpload}\r\n                                                        </DropZone>\r\n\r\n                                                    </Stack>\r\n                                                    <TextField\r\n                                                        readOnly={false}\r\n                                                        value={this.state.variantTitle}\r\n                                                        onChange={this.handleTextChange}\r\n                                                        label=\"Product Name\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n\r\n                                                    <TextField\r\n                                                        readOnly={false}\r\n                                                        value={this.state.variantPrice}\r\n                                                        onChange={this.handleTextChange}\r\n                                                        label=\"Original Price\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n\r\n                                                    <TextField\r\n                                                        readOnly={false}\r\n                                                        value={this.state.variantDiscount}\r\n                                                        onChange={this.handleTextChange}\r\n                                                        label=\"Discounted Price\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                </FormLayout>\r\n                                            </Form>\r\n                                        )}\r\n                                    </Page>\r\n                                )\r\n                            }}\r\n                        </Query>\r\n                    )\r\n                }}\r\n            </Query>\r\n        );\r\n    }\r\n\r\n    redirect = () => {\r\n        this.props.variantCreated(false)\r\n    };\r\n\r\n    itemToBeConsumed = () => {\r\n        const item = store.get('item');\r\n        const price = item.variants.edges[0].node.price;\r\n        const variantId = item.variants.edges[0].node.id;\r\n        const discounter = price * 0.1;\r\n        this.setState({ price, variantId });\r\n        return (price - discounter).toFixed(2);\r\n    };\r\n\r\n    handleTextChange = (value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    handleProductOrVariantSelectChange = (data, newValue) => {\r\n        this.setState({\r\n            productTitle: data.nodes[0].title,\r\n            productDescription: data.nodes[0].description,\r\n            productSelected: newValue,\r\n            variantTitle: data.nodes[0].variants.edges[0].node.displayName,\r\n            variantPrice: data.nodes[0].variants.edges[0].node.price,\r\n            variantDiscount: data.nodes[0].variants.edges[0].node.compareAtPrice});\r\n    };\r\n\r\n    handleVariantSelectChange = (variantsArray, newValue) => {\r\n        newValue = parseInt(newValue, 10);\r\n        this.setState({\r\n            variantSelected: newValue,\r\n            variantTitle: variantsArray[newValue].node.displayName,\r\n            variantPrice: variantsArray[newValue].node.price,\r\n            variantDiscount: variantsArray[newValue].node.compareAtPrice });\r\n    };\r\n\r\n    handleProductOrVariantSubmit = (data, shopID) => {\r\n        //data param is retrieved from gql, \"old data\", new data is stored in this.state\r\n        //send all relevant fields form old and new data with request\r\n        switch(this.state.productSelected){\r\n            case \"product\":\r\n                const product = new Product\r\n                (data.nodes[0].id, shopID, data.nodes[0].title,\r\n                    data.nodes[0].images.edges[0].node.originalSrc, data.nodes[0].description, 0, 0, 0, this.state.productTitle,\r\n                    this.state.productImage, this.state.productDescription, 0, 0, 0, 1);\r\n\r\n                $.ajax({\r\n                    type: \"POST\",\r\n                    url: \"/create-product-test\",\r\n                    contentType: \"application/json; charset=utf-8\",\r\n                    data: JSON.stringify(product),\r\n                    dataType: 'text'\r\n                });\r\n                break;\r\n\r\n            case \"variants\":\r\n                const variant = new Variant\r\n                (data.nodes[0].variants.edges[this.state.variantSelected].node.id, data.nodes[0].id, shopID,\r\n                    data.nodes[0].variants.edges[this.state.variantSelected].node.displayName,\r\n                    (data.nodes[0].variants.edges[this.state.variantSelected].node.image\r\n                        ? data.nodes[0].variants.edges[this.state.variantSelected].node.image.originalSrc\r\n                        : data.nodes[0].images.edges[0].node.originalSrc),\r\n                    data.nodes[0].variants.edges[this.state.variantSelected].node.price,\r\n                    data.nodes[0].variants.edges[this.state.variantSelected].node.compareAtPrice,\r\n                    0, 0, 0, this.state.variantTitle, this.state.variantImage, this.state.variantPrice,\r\n                    this.state.variantDiscount, 0, 0, 0, 1);\r\n\r\n                $.ajax({\r\n                    type: \"POST\",\r\n                    url: \"/create-variant-test\",\r\n                    contentType: \"application/json; charset=utf-8\",\r\n                    data: JSON.stringify(variant),\r\n                    dataType: 'json'\r\n                });\r\n        }\r\n\r\n    };\r\n}\r\n\r\nexport default CreateTestVariant;"]},"metadata":{},"sourceType":"module"}
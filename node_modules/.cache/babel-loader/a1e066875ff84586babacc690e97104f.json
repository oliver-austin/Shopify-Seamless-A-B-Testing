{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        description\\n        id\\n        totalVariants\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 10) {\\n          edges {\\n            node {\\n              price\\n              id\\n              image {\\n                originalSrc\\n                altText\\n              }\\n              displayName\\n              compareAtPrice\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query getShopID() {\\n        shop{\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Button, Caption, Card, Checkbox, DropZone, EmptyState, Form, FormLayout, Heading, Layout, Page, ResourceList, Select, Stack, Subheading, TextField, Thumbnail } from '@shopify/polaris';\nimport { Context } from \"@shopify/app-bridge-react\";\nimport { Redirect } from \"@shopify/app-bridge/actions\";\nimport store from \"store-js\";\nimport { Query } from \"react-apollo\";\nimport Modal from \"@shopify/app-bridge-react/components/Modal\";\nimport ResourceListWithProducts from \"./ResourceList\"; //TODO: fetch all variants, not first 10\n\nvar GET_SHOP_ID = gql(_templateObject());\nvar GET_PRODUCT_BY_ID = gql(_templateObject2());\n\nvar CreateTestVariant =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateTestVariant, _React$Component);\n\n  function CreateTestVariant() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateTestVariant);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateTestVariant)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      files: [],\n      productSelected: 'product',\n      variantSelected: 0,\n      productTitle: '',\n      productDescription: '',\n      variantTitle: '',\n      variantPrice: '',\n      variantDiscount: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"redirect\", function () {\n      _this.props.variantCreated(false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get('item');\n      var price = item.variants.edges[0].node.price;\n      var variantId = item.variants.edges[0].node.id;\n      var discounter = price * 0.1;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return (price - discounter).toFixed(2);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTextChange\", function (value) {\n      _this.setState({\n        value: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleProductOrVariantSelectChange\", function (data, newValue) {\n      _this.setState({\n        productTitle: data.nodes[0].title,\n        productDescription: data.nodes[0].description,\n        productSelected: newValue,\n        variantTitle: data.nodes[0].variants.edges[0].node.displayName,\n        variantPrice: data.nodes[0].variants.edges[0].node.price,\n        variantDiscount: data.nodes[0].variants.edges[0].node.compareAtPrice\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVariantSelectChange\", function (variantsArray, newValue) {\n      newValue = _parseInt(newValue, 10);\n\n      _this.setState({\n        variantSelected: newValue,\n        variantTitle: variantsArray[newValue].node.displayName,\n        variantPrice: variantsArray[newValue].node.price,\n        variantDiscount: variantsArray[newValue].node.compareAtPrice\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleProductSubmit\", function (data) {\n      //data param is retrieved from gql, \"old data\", new data is stored in this.state\n      //send all relevant fields form old and new data with request\n      var toSend = {};\n      $.ajax({\n        type: \"POST\",\n        url: \"./create-product-test\",\n        data: data,\n        success: success,\n        dataType: JSON\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVariantSubmit\", function (data) {\n      $.ajax({\n        type: \"POST\",\n        url: \"./create-variant-test\",\n        data: data,\n        success: success,\n        dataType: JSON\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSave\", function () {});\n\n    return _this;\n  }\n\n  _createClass(CreateTestVariant, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var productOrVariantSelectOptions = [{\n        label: 'Product',\n        value: 'product'\n      }, {\n        label: 'Variants',\n        value: 'variants'\n      }];\n      var app = this.context;\n      var files = this.state.files;\n      var validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n      console.log(this.state.files);\n\n      if (this.state.files.length != 0) {\n        console.log(window.URL.createObjectURL(this.state.files[0]));\n      }\n\n      var fileUpload = !files.length && React.createElement(DropZone.FileUpload, null);\n      var uploadedFiles = files.length > 0 && React.createElement(Stack, {\n        vertical: true\n      }, files.map(function (file, index) {\n        return React.createElement(Stack, {\n          alignment: \"center\",\n          key: index\n        }, React.createElement(Thumbnail, {\n          size: \"large\",\n          alt: file.name,\n          source: validImageTypes.indexOf(file.type) > 0 ? window.URL.createObjectURL(file) : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\n        }), React.createElement(\"div\", null, file.name, \" \", React.createElement(Caption, null, file.size, \" bytes\")));\n      }));\n      return React.createElement(Query, {\n        query: GET_PRODUCT_BY_ID,\n        variables: {\n          ids: store.get('ids')\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n\n        if (loading) {\n          return React.createElement(\"div\", null, \"Loading\\u2026\");\n        }\n\n        if (error) {\n          return React.createElement(\"div\", null, error.message);\n        }\n\n        var variantsArray = data.nodes[0].variants.edges;\n        var variantSelectOptions = [];\n        variantsArray.forEach(function (variant, index) {\n          variantSelectOptions.push({\n            label: variant.node.displayName,\n            value: index\n          });\n        });\n        console.log(data);\n        return React.createElement(Page, {\n          primaryAction: {\n            content: 'Create A/B Test',\n            onAction: function onAction() {\n              return _this2.handleSave;\n            }\n          }\n        }, React.createElement(Select, {\n          label: \"Create test for:\",\n          disabled: false,\n          options: productOrVariantSelectOptions,\n          onChange: _this2.handleProductOrVariantSelectChange.bind(_this2, data),\n          value: _this2.state.productSelected\n        }), _this2.state.productSelected === 'product' ? React.createElement(Form, {\n          onSubmit: _this2.handleProductSubmit(data)\n        }, React.createElement(FormLayout, null, React.createElement(Stack, null, React.createElement(Thumbnail, {\n          size: \"large\",\n          source: data.nodes[0].images.edges[0] ? data.nodes[0].images.edges[0].node.originalSrc : '',\n          alt: data.nodes[0].images.edges[0] ? data.nodes[0].images.edges[0].node.altText : ''\n        }), React.createElement(DropZone, {\n          onDrop: function onDrop(files, acceptedFiles, rejectedFiles) {\n            _this2.setState({\n              files: [].concat(_toConsumableArray(_this2.state.files), _toConsumableArray(acceptedFiles))\n            });\n          }\n        }, uploadedFiles, fileUpload)), React.createElement(TextField, {\n          readOnly: false,\n          value: _this2.state.productTitle,\n          onChange: _this2.handleTextChange,\n          label: \"Product Name\",\n          type: \"text\"\n        }), React.createElement(TextField, {\n          readOnly: false,\n          value: _this2.state.productDescription,\n          onChange: _this2.handleTextChange,\n          label: \"Product Description\",\n          type: \"text\"\n        }))) : React.createElement(Form, {\n          onSubmit: _this2.handleVariantSubmit(data)\n        }, React.createElement(FormLayout, null, React.createElement(Select, {\n          label: \"Select product variant to create test for:\",\n          disabled: false,\n          options: variantSelectOptions,\n          value: _this2.state.variantSelected,\n          onChange: _this2.handleVariantSelectChange.bind(_this2, variantsArray)\n        }), React.createElement(Stack, null, React.createElement(Thumbnail, {\n          size: \"large\",\n          source: data.nodes[0].variants.edges[_this2.state.variantSelected].node.image ? data.nodes[0].variants.edges[_this2.state.variantSelected].node.image.originalSrc : data.nodes[0].images.edges[0].node.originalSrc,\n          alt: data.nodes[0].variants.edges[_this2.state.variantSelected].node.image ? data.nodes[0].variants.edges[_this2.state.variantSelected].node.image.altText : data.nodes[0].images.edges[0].node.altText\n        }), React.createElement(DropZone, {\n          onDrop: function onDrop(files, acceptedFiles, rejectedFiles) {\n            _this2.setState({\n              files: [].concat(_toConsumableArray(_this2.state.files), _toConsumableArray(acceptedFiles))\n            });\n          }\n        }, uploadedFiles, fileUpload)), React.createElement(TextField, {\n          readOnly: false,\n          value: _this2.state.variantTitle,\n          onChange: _this2.handleTextChange,\n          label: \"Product Name\",\n          type: \"text\"\n        }), React.createElement(TextField, {\n          readOnly: false,\n          value: _this2.state.variantPrice,\n          onChange: _this2.handleTextChange,\n          label: \"Original Price\",\n          type: \"text\"\n        }), React.createElement(TextField, {\n          readOnly: false,\n          value: _this2.state.variantDiscount,\n          onChange: _this2.handleTextChange,\n          label: \"Discounted Price\",\n          type: \"text\"\n        }))));\n      });\n    }\n  }]);\n\n  return CreateTestVariant;\n}(React.Component);\n\n_defineProperty(CreateTestVariant, \"contextType\", Context);\n\nexport default CreateTestVariant;","map":{"version":3,"sources":["C:\\Users\\Oliver\\Shopify\\Seamless AB Testing\\components\\CreateTestVariant.js"],"names":["gql","Button","Caption","Card","Checkbox","DropZone","EmptyState","Form","FormLayout","Heading","Layout","Page","ResourceList","Select","Stack","Subheading","TextField","Thumbnail","Context","Redirect","store","Query","Modal","ResourceListWithProducts","GET_SHOP_ID","GET_PRODUCT_BY_ID","CreateTestVariant","files","productSelected","variantSelected","productTitle","productDescription","variantTitle","variantPrice","variantDiscount","props","variantCreated","item","get","price","variants","edges","node","variantId","id","discounter","setState","toFixed","value","data","newValue","nodes","title","description","displayName","compareAtPrice","variantsArray","toSend","$","ajax","type","url","success","dataType","JSON","productOrVariantSelectOptions","label","app","context","state","validImageTypes","console","log","length","window","URL","createObjectURL","fileUpload","uploadedFiles","map","file","index","name","indexOf","size","ids","loading","error","message","variantSelectOptions","forEach","variant","push","content","onAction","handleSave","handleProductOrVariantSelectChange","bind","handleProductSubmit","images","originalSrc","altText","acceptedFiles","rejectedFiles","handleTextChange","handleVariantSubmit","handleVariantSelectChange","image","React","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { Button, Caption, Card, Checkbox, DropZone, EmptyState, Form, FormLayout, Heading, Layout, Page, ResourceList, Select, Stack, Subheading, TextField, Thumbnail } from '@shopify/polaris';\r\nimport {Context} from \"@shopify/app-bridge-react\";\r\nimport {Redirect} from \"@shopify/app-bridge/actions\";\r\nimport store from \"store-js\";\r\nimport {Query} from \"react-apollo\";\r\nimport Modal from \"@shopify/app-bridge-react/components/Modal\";\r\nimport ResourceListWithProducts from \"./ResourceList\";\r\n\r\n//TODO: fetch all variants, not first 10\r\nconst GET_SHOP_ID = gql`\r\n    query getShopID() {\r\n        shop{\r\n            id\r\n        }\r\n    }\r\n`;\r\nconst GET_PRODUCT_BY_ID = gql`\r\n  query getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n      ... on Product {\r\n        title\r\n        handle\r\n        description\r\n        id\r\n        totalVariants\r\n        images(first: 1) {\r\n          edges {\r\n            node {\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 10) {\r\n          edges {\r\n            node {\r\n              price\r\n              id\r\n              image {\r\n                originalSrc\r\n                altText\r\n              }\r\n              displayName\r\n              compareAtPrice\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass CreateTestVariant extends React.Component {\r\n    static contextType = Context;\r\n    state = {\r\n        files: [],\r\n        productSelected: 'product',\r\n        variantSelected: 0,\r\n        productTitle: '',\r\n        productDescription: '',\r\n        variantTitle: '',\r\n        variantPrice: '',\r\n        variantDiscount: ''\r\n    };\r\n\r\n    render() {\r\n        const productOrVariantSelectOptions = [{ label: 'Product', value: 'product' }, { label: 'Variants', value: 'variants' }];\r\n        const app = this.context;\r\n\r\n        const {files} = this.state;\r\n        const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\r\n        console.log(this.state.files);\r\n        if(this.state.files.length != 0){\r\n            console.log(window.URL.createObjectURL(this.state.files[0]));\r\n        }\r\n\r\n        const fileUpload = !files.length && <DropZone.FileUpload />;\r\n        const uploadedFiles = files.length > 0 && (\r\n\r\n            <Stack vertical>\r\n                {files.map((file, index) => (\r\n                    <Stack alignment=\"center\" key={index}>\r\n                        <Thumbnail\r\n                            size=\"large\"\r\n                            alt={file.name}\r\n                            source={\r\n                                validImageTypes.indexOf(file.type) > 0\r\n                                    ? window.URL.createObjectURL(file)\r\n                                    : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\r\n                            }\r\n                        />\r\n                        <div>\r\n                            {file.name} <Caption>{file.size} bytes</Caption>\r\n                        </div>\r\n                    </Stack>\r\n                ))}\r\n            </Stack>\r\n        );\r\n\r\n        return (\r\n            <Query query={GET_PRODUCT_BY_ID} variables={{ ids: store.get('ids') }}>\r\n                {({ data, loading, error }) => {\r\n                    if (loading) { return <div>Loading…</div>; }\r\n                    if (error) { return <div>{error.message}</div>; }\r\n                    const variantsArray = data.nodes[0].variants.edges;\r\n                    const variantSelectOptions = [];\r\n                    variantsArray.forEach(function(variant, index) {\r\n                        variantSelectOptions.push({label: variant.node.displayName, value: index})\r\n                    });\r\n                    console.log(data);\r\n                    return(\r\n                        <Page\r\n                            primaryAction={{\r\n                                content: 'Create A/B Test',\r\n                                onAction: () => this.handleSave,\r\n                            }}\r\n                            >\r\n                                <Select\r\n                                    label=\"Create test for:\"\r\n                                    disabled={false}\r\n                                    options={productOrVariantSelectOptions}\r\n                                    onChange={this.handleProductOrVariantSelectChange.bind(this, data)}\r\n                                    value={this.state.productSelected}/>\r\n\r\n                            {this.state.productSelected === 'product' ? (\r\n                                <Form onSubmit={this.handleProductSubmit(data)}>\r\n                                    <FormLayout>\r\n                                        <Stack>\r\n                                        <Thumbnail\r\n                                            size=\"large\"\r\n                                            source={\r\n                                                data.nodes[0].images.edges[0]\r\n                                                    ? data.nodes[0].images.edges[0].node.originalSrc\r\n                                                    : ''\r\n                                            }\r\n                                            alt={\r\n                                                data.nodes[0].images.edges[0]\r\n                                                    ? data.nodes[0].images.edges[0].node.altText\r\n                                                    : ''\r\n                                            }\r\n                                        />\r\n\r\n                                        <DropZone\r\n                                            onDrop={(files, acceptedFiles, rejectedFiles) => {\r\n                                                this.setState({files: [...this.state.files, ...acceptedFiles]});\r\n                                            }}>\r\n                                            {uploadedFiles}\r\n                                            {fileUpload}\r\n                                        </DropZone>\r\n                                        </Stack>\r\n                                        <TextField\r\n                                            readOnly={false}\r\n                                            value={this.state.productTitle}\r\n                                            onChange={this.handleTextChange}\r\n                                            label=\"Product Name\"\r\n                                            type=\"text\"\r\n                                        />\r\n                                        <TextField\r\n                                            readOnly={false}\r\n                                            value={this.state.productDescription}\r\n                                            onChange={this.handleTextChange}\r\n                                            label=\"Product Description\"\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </FormLayout>\r\n                                </Form>\r\n\r\n                            ) : (\r\n                                <Form onSubmit={this.handleVariantSubmit(data)}>\r\n                                    <FormLayout>\r\n                                        <Select\r\n                                            label=\"Select product variant to create test for:\"\r\n                                            disabled={false}\r\n                                            options={variantSelectOptions}\r\n                                            value={this.state.variantSelected}\r\n                                            onChange={this.handleVariantSelectChange.bind(this, variantsArray)}\r\n                                            />\r\n                                            <Stack>\r\n\r\n                                        <Thumbnail\r\n                                            size=\"large\"\r\n                                            source={\r\n                                                data.nodes[0].variants.edges[this.state.variantSelected].node.image\r\n                                                    ? data.nodes[0].variants.edges[this.state.variantSelected].node.image.originalSrc\r\n                                                    : data.nodes[0].images.edges[0].node.originalSrc\r\n                                            }\r\n                                            alt={\r\n                                                data.nodes[0].variants.edges[this.state.variantSelected].node.image\r\n                                                    ? data.nodes[0].variants.edges[this.state.variantSelected].node.image.altText\r\n                                                    : data.nodes[0].images.edges[0].node.altText\r\n                                            }\r\n                                        />\r\n\r\n                                        <DropZone\r\n                                            onDrop={(files, acceptedFiles, rejectedFiles) => {\r\n                                            this.setState({files: [...this.state.files, ...acceptedFiles]});\r\n                                        }}>\r\n                                            {uploadedFiles}\r\n                                            {fileUpload}\r\n                                        </DropZone>\r\n\r\n                                            </Stack>\r\n                                        <TextField\r\n                                            readOnly={false}\r\n                                            value={this.state.variantTitle}\r\n                                            onChange={this.handleTextChange}\r\n                                            label=\"Product Name\"\r\n                                            type=\"text\"\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            readOnly={false}\r\n                                            value={this.state.variantPrice}\r\n                                            onChange={this.handleTextChange}\r\n                                            label=\"Original Price\"\r\n                                            type=\"text\"\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            readOnly={false}\r\n                                            value={this.state.variantDiscount}\r\n                                            onChange={this.handleTextChange}\r\n                                            label=\"Discounted Price\"\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </FormLayout>\r\n                                </Form>\r\n                                )}\r\n                        </Page>\r\n                    )\r\n                }}\r\n                    </Query>\r\n        );\r\n    }\r\n\r\n    redirect = () => {\r\n        this.props.variantCreated(false)\r\n    };\r\n\r\n    itemToBeConsumed = () => {\r\n        const item = store.get('item');\r\n        const price = item.variants.edges[0].node.price;\r\n        const variantId = item.variants.edges[0].node.id;\r\n        const discounter = price * 0.1;\r\n        this.setState({ price, variantId });\r\n        return (price - discounter).toFixed(2);\r\n    };\r\n\r\n    handleTextChange = (value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    handleProductOrVariantSelectChange = (data, newValue) => {\r\n        this.setState({\r\n            productTitle: data.nodes[0].title,\r\n            productDescription: data.nodes[0].description,\r\n            productSelected: newValue,\r\n            variantTitle: data.nodes[0].variants.edges[0].node.displayName,\r\n            variantPrice: data.nodes[0].variants.edges[0].node.price,\r\n            variantDiscount: data.nodes[0].variants.edges[0].node.compareAtPrice});\r\n    };\r\n\r\n    handleVariantSelectChange = (variantsArray, newValue) => {\r\n        newValue = parseInt(newValue, 10);\r\n        this.setState({\r\n            variantSelected: newValue,\r\n            variantTitle: variantsArray[newValue].node.displayName,\r\n            variantPrice: variantsArray[newValue].node.price,\r\n            variantDiscount: variantsArray[newValue].node.compareAtPrice });\r\n    };\r\n\r\n    handleProductSubmit = (data) => {\r\n        //data param is retrieved from gql, \"old data\", new data is stored in this.state\r\n        //send all relevant fields form old and new data with request\r\n        var toSend = {\r\n\r\n        };\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \"./create-product-test\",\r\n            data: data,\r\n            success: success,\r\n            dataType: JSON\r\n        });\r\n    };\r\n\r\n    handleVariantSubmit = (data) => {\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \"./create-variant-test\",\r\n            data: data,\r\n            success: success,\r\n            dataType: JSON\r\n        });\r\n    };\r\n\r\n    handleSave = () => {\r\n\r\n    }\r\n}\r\n\r\nexport default CreateTestVariant;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        description\\n        id\\n        totalVariants\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 10) {\\n          edges {\\n            node {\\n              price\\n              id\\n              image {\\n                originalSrc\\n                altText\\n              }\\n              displayName\\n              compareAtPrice\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Button, Card, Checkbox, EmptyState, Form, FormLayout, Heading, Layout, Page, ResourceList, Select, Stack, Subheading, TextField, Thumbnail } from '@shopify/polaris';\nimport { Context } from \"@shopify/app-bridge-react\";\nimport { Redirect } from \"@shopify/app-bridge/actions\";\nimport store from \"store-js\";\nimport { Query } from \"react-apollo\";\nimport Modal from \"@shopify/app-bridge-react/components/Modal\";\nimport ResourceListWithProducts from \"./ResourceList\"; //TODO: fetch all variants, not first 10\n\nvar GET_PRODUCT_BY_ID = gql(_templateObject());\n\nvar CreateTestVariant =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateTestVariant, _React$Component);\n\n  function CreateTestVariant() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateTestVariant);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateTestVariant)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      productSelected: 'product',\n      variantSelected: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"redirect\", function () {\n      _this.props.variantCreated(false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get('item');\n      var price = item.variants.edges[0].node.price;\n      var variantId = item.variants.edges[0].node.id;\n      var discounter = price * 0.1;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return (price - discounter).toFixed(2);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTextChange\", function (value) {\n      _this.setState({\n        value: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleProductOrVariantSelectChange\", function (newValue) {\n      _this.setState({\n        productSelected: newValue\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVariantSelectChange\", function (newValue) {\n      _this.setState({\n        variantSelected: newValue\n      });\n\n      console.log(_this.state.variantSelected);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleProductSubmit\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVariantSubmit\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSave\", function () {});\n\n    return _this;\n  }\n\n  _createClass(CreateTestVariant, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var productOrVariantSelectOptions = [{\n        label: 'Product',\n        value: 'product'\n      }, {\n        label: 'Variants',\n        value: 'variants'\n      }];\n      var app = this.context;\n      return React.createElement(Query, {\n        query: GET_PRODUCT_BY_ID,\n        variables: {\n          ids: store.get('ids')\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n\n        if (loading) {\n          return React.createElement(\"div\", null, \"Loading\\u2026\");\n        }\n\n        if (error) {\n          return React.createElement(\"div\", null, error.message);\n        }\n\n        var variantsArray = data.nodes[0].variants.edges;\n        var variantSelectOptions = [];\n        variantsArray.forEach(function (variant, index) {\n          variantSelectOptions.push({\n            label: variant.node.displayName,\n            value: index\n          });\n        });\n        console.log(data);\n        return React.createElement(Page, {\n          primaryAction: {\n            content: 'Create A/B Test',\n            onAction: function onAction() {\n              return _this2.handleSave;\n            }\n          }\n        }, React.createElement(Select, {\n          label: \"Create test for:\",\n          disabled: false,\n          options: productOrVariantSelectOptions,\n          onChange: _this2.handleProductOrVariantSelectChange,\n          value: _this2.state.productSelected\n        }), _this2.state.productSelected === 'product' ? React.createElement(Form, {\n          onSubmit: _this2.handleProductSubmit\n        }, React.createElement(FormLayout, null, React.createElement(Thumbnail, {\n          source: data.nodes[0].images.edges[0] ? data.nodes[0].images.edges[0].node.originalSrc : '',\n          alt: data.nodes[0].images.edges[0] ? data.nodes[0].images.edges[0].node.altText : ''\n        }), React.createElement(TextField, {\n          readOnly: false,\n          value: data.nodes[0].title,\n          onChange: _this2.handleTextChange('email'),\n          label: \"Product Name\",\n          type: \"text\"\n        }))) : React.createElement(Form, {\n          onSubmit: _this2.handleVariantSubmit\n        }, React.createElement(FormLayout, null, React.createElement(Select, {\n          label: \"Select product variant to create test for:\",\n          disabled: false,\n          options: variantSelectOptions,\n          onChange: _this2.handleVariantSelectChange,\n          value: data.nodes[0].variants.edges[_this2.state.variantSelected].node.displayName\n        }), React.createElement(Thumbnail, {\n          source: data.nodes[0].variants.edges[_this2.state.variantSelected].node.image ? data.nodes[0].variants.edges[_this2.state.variantSelected].node.image.originalSrc : data.nodes[0].images.edges[0].node.originalSrc,\n          alt: data.nodes[0].variants.edges[_this2.state.variantSelected].node.image ? data.nodes[0].variants.edges[_this2.state.variantSelected].node.image.altText : data.nodes[0].images.edges[0].node.altText\n        }), React.createElement(TextField, {\n          readOnly: false,\n          value: data.nodes[0].variants.edges[_this2.state.variantSelected].node.displayName,\n          onChange: _this2.handleTextChange('email'),\n          label: \"Product Name\",\n          type: \"text\"\n        }), React.createElement(TextField, {\n          readOnly: false,\n          value: data.nodes[0].variants.edges[_this2.state.variantSelected].node.price,\n          onChange: _this2.handleTextChange('email'),\n          label: \"Original Price\",\n          type: \"text\"\n        }), React.createElement(TextField, {\n          readOnly: false,\n          value: data.nodes[0].variants.edges[_this2.state.variantSelected].node.compareAtPrice,\n          onChange: _this2.handleTextChange('email'),\n          label: \"Discounted Price\",\n          type: \"text\"\n        }))));\n      });\n    }\n  }]);\n\n  return CreateTestVariant;\n}(React.Component);\n\n_defineProperty(CreateTestVariant, \"contextType\", Context);\n\nexport default CreateTestVariant;","map":{"version":3,"sources":["C:\\Users\\Oliver\\Shopify\\Seamless AB Testing\\components\\CreateTestVariant.js"],"names":["gql","Button","Card","Checkbox","EmptyState","Form","FormLayout","Heading","Layout","Page","ResourceList","Select","Stack","Subheading","TextField","Thumbnail","Context","Redirect","store","Query","Modal","ResourceListWithProducts","GET_PRODUCT_BY_ID","CreateTestVariant","productSelected","variantSelected","props","variantCreated","item","get","price","variants","edges","node","variantId","id","discounter","setState","toFixed","value","newValue","console","log","state","productOrVariantSelectOptions","label","app","context","ids","data","loading","error","message","variantsArray","nodes","variantSelectOptions","forEach","variant","index","push","displayName","content","onAction","handleSave","handleProductOrVariantSelectChange","handleProductSubmit","images","originalSrc","altText","title","handleTextChange","handleVariantSubmit","handleVariantSelectChange","image","compareAtPrice","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,UAAjC,EAA6CC,IAA7C,EAAmDC,UAAnD,EAA+DC,OAA/D,EAAwEC,MAAxE,EAAgFC,IAAhF,EAAsFC,YAAtF,EAAoGC,MAApG,EAA4GC,KAA5G,EAAmHC,UAAnH,EAA+HC,SAA/H,EAA0IC,SAA1I,QAA2J,kBAA3J;AACA,SAAQC,OAAR,QAAsB,2BAAtB;AACA,SAAQC,QAAR,QAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,wBAAP,MAAqC,gBAArC,C,CAEA;;AACA,IAAMC,iBAAiB,GAAGtB,GAAH,mBAAvB;;IAoCMuB,iB;;;;;;;;;;;;;;;;;;4DAEM;AACJC,MAAAA,eAAe,EAAE,SADb;AAEJC,MAAAA,eAAe,EAAE;AAFb,K;;+DAmHG,YAAM;AACb,YAAKC,KAAL,CAAWC,cAAX,CAA0B,KAA1B;AACH,K;;uEAEkB,YAAM;AACrB,UAAMC,IAAI,GAAGV,KAAK,CAACW,GAAN,CAAU,MAAV,CAAb;AACA,UAAMC,KAAK,GAAGF,IAAI,CAACG,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BH,KAA1C;AACA,UAAMI,SAAS,GAAGN,IAAI,CAACG,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BE,EAA9C;AACA,UAAMC,UAAU,GAAGN,KAAK,GAAG,GAA3B;;AACA,YAAKO,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAALA,KAAF;AAASI,QAAAA,SAAS,EAATA;AAAT,OAAd;;AACA,aAAO,CAACJ,KAAK,GAAGM,UAAT,EAAqBE,OAArB,CAA6B,CAA7B,CAAP;AACH,K;;uEAEkB,UAACC,KAAD,EAAW;AAC1B,YAAKF,QAAL,CAAc;AAAEE,QAAAA,KAAK,EAALA;AAAF,OAAd;AACH,K;;yFAEoC,UAAAC,QAAQ,EAAI;AAC7C,YAAKH,QAAL,CAAc;AAAEb,QAAAA,eAAe,EAAEgB;AAAnB,OAAd;AACH,K;;gFAE2B,UAAAA,QAAQ,EAAI;AACpC,YAAKH,QAAL,CAAc;AAACZ,QAAAA,eAAe,EAAEe;AAAlB,OAAd;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWlB,eAAvB;AACH,K;;0EAEqB,YAAM,CAE3B,C;;0EAEqB,YAAM,CAE3B,C;;iEAEY,YAAM,CAElB,C;;;;;;;6BAlJQ;AAAA;;AACL,UAAMmB,6BAA6B,GAAG,CAAC;AAAEC,QAAAA,KAAK,EAAE,SAAT;AAAoBN,QAAAA,KAAK,EAAE;AAA3B,OAAD,EAAyC;AAAEM,QAAAA,KAAK,EAAE,UAAT;AAAqBN,QAAAA,KAAK,EAAE;AAA5B,OAAzC,CAAtC;AAEA,UAAMO,GAAG,GAAG,KAAKC,OAAjB;AAEA,aACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEzB,iBAAd;AAAiC,QAAA,SAAS,EAAE;AAAE0B,UAAAA,GAAG,EAAE9B,KAAK,CAACW,GAAN,CAAU,KAAV;AAAP;AAA5C,SACK,gBAA8B;AAAA,YAA3BoB,IAA2B,QAA3BA,IAA2B;AAAA,YAArBC,OAAqB,QAArBA,OAAqB;AAAA,YAAZC,KAAY,QAAZA,KAAY;;AAC3B,YAAID,OAAJ,EAAa;AAAE,iBAAO,iDAAP;AAA6B;;AAC5C,YAAIC,KAAJ,EAAW;AAAE,iBAAO,iCAAMA,KAAK,CAACC,OAAZ,CAAP;AAAoC;;AACjD,YAAMC,aAAa,GAAGJ,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcvB,QAAd,CAAuBC,KAA7C;AACA,YAAMuB,oBAAoB,GAAG,EAA7B;AACAF,QAAAA,aAAa,CAACG,OAAd,CAAsB,UAASC,OAAT,EAAkBC,KAAlB,EAAyB;AAC3CH,UAAAA,oBAAoB,CAACI,IAArB,CAA0B;AAACd,YAAAA,KAAK,EAAEY,OAAO,CAACxB,IAAR,CAAa2B,WAArB;AAAkCrB,YAAAA,KAAK,EAAEmB;AAAzC,WAA1B;AACH,SAFD;AAIAjB,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACA,eACI,oBAAC,IAAD;AACI,UAAA,aAAa,EAAE;AACXY,YAAAA,OAAO,EAAE,iBADE;AAEXC,YAAAA,QAAQ,EAAE;AAAA,qBAAM,MAAI,CAACC,UAAX;AAAA;AAFC;AADnB,WAMQ,oBAAC,MAAD;AACI,UAAA,KAAK,EAAC,kBADV;AAEI,UAAA,QAAQ,EAAE,KAFd;AAGI,UAAA,OAAO,EAAEnB,6BAHb;AAII,UAAA,QAAQ,EAAE,MAAI,CAACoB,kCAJnB;AAKI,UAAA,KAAK,EAAE,MAAI,CAACrB,KAAL,CAAWnB;AALtB,UANR,EAaK,MAAI,CAACmB,KAAL,CAAWnB,eAAX,KAA+B,SAA/B,GACG,oBAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,MAAI,CAACyC;AAArB,WACI,oBAAC,UAAD,QACI,oBAAC,SAAD;AACI,UAAA,MAAM,EACFhB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcY,MAAd,CAAqBlC,KAArB,CAA2B,CAA3B,IACMiB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcY,MAAd,CAAqBlC,KAArB,CAA2B,CAA3B,EAA8BC,IAA9B,CAAmCkC,WADzC,GAEM,EAJd;AAMI,UAAA,GAAG,EACClB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcY,MAAd,CAAqBlC,KAArB,CAA2B,CAA3B,IACMiB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcY,MAAd,CAAqBlC,KAArB,CAA2B,CAA3B,EAA8BC,IAA9B,CAAmCmC,OADzC,GAEM;AATd,UADJ,EAaI,oBAAC,SAAD;AACI,UAAA,QAAQ,EAAE,KADd;AAEI,UAAA,KAAK,EAAEnB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAce,KAFzB;AAGI,UAAA,QAAQ,EAAE,MAAI,CAACC,gBAAL,CAAsB,OAAtB,CAHd;AAII,UAAA,KAAK,EAAC,cAJV;AAKI,UAAA,IAAI,EAAC;AALT,UAbJ,CADJ,CADH,GA0BG,oBAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,MAAI,CAACC;AAArB,WACI,oBAAC,UAAD,QACI,oBAAC,MAAD;AACI,UAAA,KAAK,EAAC,4CADV;AAEI,UAAA,QAAQ,EAAE,KAFd;AAGI,UAAA,OAAO,EAAEhB,oBAHb;AAII,UAAA,QAAQ,EAAE,MAAI,CAACiB,yBAJnB;AAKI,UAAA,KAAK,EAAEvB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcvB,QAAd,CAAuBC,KAAvB,CAA6B,MAAI,CAACW,KAAL,CAAWlB,eAAxC,EAAyDQ,IAAzD,CAA8D2B;AALzE,UADJ,EAOI,oBAAC,SAAD;AACI,UAAA,MAAM,EACFX,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcvB,QAAd,CAAuBC,KAAvB,CAA6B,MAAI,CAACW,KAAL,CAAWlB,eAAxC,EAAyDQ,IAAzD,CAA8DwC,KAA9D,GACMxB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcvB,QAAd,CAAuBC,KAAvB,CAA6B,MAAI,CAACW,KAAL,CAAWlB,eAAxC,EAAyDQ,IAAzD,CAA8DwC,KAA9D,CAAoEN,WAD1E,GAEMlB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcY,MAAd,CAAqBlC,KAArB,CAA2B,CAA3B,EAA8BC,IAA9B,CAAmCkC,WAJjD;AAMI,UAAA,GAAG,EACClB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcvB,QAAd,CAAuBC,KAAvB,CAA6B,MAAI,CAACW,KAAL,CAAWlB,eAAxC,EAAyDQ,IAAzD,CAA8DwC,KAA9D,GACMxB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcvB,QAAd,CAAuBC,KAAvB,CAA6B,MAAI,CAACW,KAAL,CAAWlB,eAAxC,EAAyDQ,IAAzD,CAA8DwC,KAA9D,CAAoEL,OAD1E,GAEMnB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcY,MAAd,CAAqBlC,KAArB,CAA2B,CAA3B,EAA8BC,IAA9B,CAAmCmC;AATjD,UAPJ,EAmBI,oBAAC,SAAD;AACI,UAAA,QAAQ,EAAE,KADd;AAEI,UAAA,KAAK,EAAEnB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcvB,QAAd,CAAuBC,KAAvB,CAA6B,MAAI,CAACW,KAAL,CAAWlB,eAAxC,EAAyDQ,IAAzD,CAA8D2B,WAFzE;AAGI,UAAA,QAAQ,EAAE,MAAI,CAACU,gBAAL,CAAsB,OAAtB,CAHd;AAII,UAAA,KAAK,EAAC,cAJV;AAKI,UAAA,IAAI,EAAC;AALT,UAnBJ,EA2BI,oBAAC,SAAD;AACI,UAAA,QAAQ,EAAE,KADd;AAEI,UAAA,KAAK,EAAErB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcvB,QAAd,CAAuBC,KAAvB,CAA6B,MAAI,CAACW,KAAL,CAAWlB,eAAxC,EAAyDQ,IAAzD,CAA8DH,KAFzE;AAGI,UAAA,QAAQ,EAAE,MAAI,CAACwC,gBAAL,CAAsB,OAAtB,CAHd;AAII,UAAA,KAAK,EAAC,gBAJV;AAKI,UAAA,IAAI,EAAC;AALT,UA3BJ,EAmCI,oBAAC,SAAD;AACI,UAAA,QAAQ,EAAE,KADd;AAEI,UAAA,KAAK,EAAErB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcvB,QAAd,CAAuBC,KAAvB,CAA6B,MAAI,CAACW,KAAL,CAAWlB,eAAxC,EAAyDQ,IAAzD,CAA8DyC,cAFzE;AAGI,UAAA,QAAQ,EAAE,MAAI,CAACJ,gBAAL,CAAsB,OAAtB,CAHd;AAII,UAAA,KAAK,EAAC,kBAJV;AAKI,UAAA,IAAI,EAAC;AALT,UAnCJ,CADJ,CAvCR,CADJ;AAwFH,OAnGL,CADJ;AAuGH;;;;EAnH2BK,KAAK,CAACC,S;;gBAAhCrD,iB,iBACmBP,O;;AA2JzB,eAAeO,iBAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport { Button, Card, Checkbox, EmptyState, Form, FormLayout, Heading, Layout, Page, ResourceList, Select, Stack, Subheading, TextField, Thumbnail } from '@shopify/polaris';\r\nimport {Context} from \"@shopify/app-bridge-react\";\r\nimport {Redirect} from \"@shopify/app-bridge/actions\";\r\nimport store from \"store-js\";\r\nimport {Query} from \"react-apollo\";\r\nimport Modal from \"@shopify/app-bridge-react/components/Modal\";\r\nimport ResourceListWithProducts from \"./ResourceList\";\r\n\r\n//TODO: fetch all variants, not first 10\r\nconst GET_PRODUCT_BY_ID = gql`\r\n  query getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n      ... on Product {\r\n        title\r\n        handle\r\n        description\r\n        id\r\n        totalVariants\r\n        images(first: 1) {\r\n          edges {\r\n            node {\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 10) {\r\n          edges {\r\n            node {\r\n              price\r\n              id\r\n              image {\r\n                originalSrc\r\n                altText\r\n              }\r\n              displayName\r\n              compareAtPrice\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass CreateTestVariant extends React.Component {\r\n    static contextType = Context;\r\n    state = {\r\n        productSelected: 'product',\r\n        variantSelected: 0\r\n    };\r\n\r\n    render() {\r\n        const productOrVariantSelectOptions = [{ label: 'Product', value: 'product' }, { label: 'Variants', value: 'variants' }];\r\n\r\n        const app = this.context;\r\n\r\n        return (\r\n            <Query query={GET_PRODUCT_BY_ID} variables={{ ids: store.get('ids') }}>\r\n                {({ data, loading, error }) => {\r\n                    if (loading) { return <div>Loading…</div>; }\r\n                    if (error) { return <div>{error.message}</div>; }\r\n                    const variantsArray = data.nodes[0].variants.edges;\r\n                    const variantSelectOptions = [];\r\n                    variantsArray.forEach(function(variant, index) {\r\n                        variantSelectOptions.push({label: variant.node.displayName, value: index})\r\n                    });\r\n\r\n                    console.log(data);\r\n                    return(\r\n                        <Page\r\n                            primaryAction={{\r\n                                content: 'Create A/B Test',\r\n                                onAction: () => this.handleSave,\r\n                            }}\r\n                            >\r\n                                <Select\r\n                                    label=\"Create test for:\"\r\n                                    disabled={false}\r\n                                    options={productOrVariantSelectOptions}\r\n                                    onChange={this.handleProductOrVariantSelectChange}\r\n                                    value={this.state.productSelected}/>\r\n\r\n                            {this.state.productSelected === 'product' ? (\r\n                                <Form onSubmit={this.handleProductSubmit}>\r\n                                    <FormLayout>\r\n                                        <Thumbnail\r\n                                            source={\r\n                                                data.nodes[0].images.edges[0]\r\n                                                    ? data.nodes[0].images.edges[0].node.originalSrc\r\n                                                    : ''\r\n                                            }\r\n                                            alt={\r\n                                                data.nodes[0].images.edges[0]\r\n                                                    ? data.nodes[0].images.edges[0].node.altText\r\n                                                    : ''\r\n                                            }\r\n                                        />\r\n                                        <TextField\r\n                                            readOnly={false}\r\n                                            value={data.nodes[0].title}\r\n                                            onChange={this.handleTextChange('email')}\r\n                                            label=\"Product Name\"\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </FormLayout>\r\n                                </Form>\r\n\r\n                            ) : (\r\n                                <Form onSubmit={this.handleVariantSubmit}>\r\n                                    <FormLayout>\r\n                                        <Select\r\n                                            label=\"Select product variant to create test for:\"\r\n                                            disabled={false}\r\n                                            options={variantSelectOptions}\r\n                                            onChange={this.handleVariantSelectChange}\r\n                                            value={data.nodes[0].variants.edges[this.state.variantSelected].node.displayName}/>\r\n                                        <Thumbnail\r\n                                            source={\r\n                                                data.nodes[0].variants.edges[this.state.variantSelected].node.image\r\n                                                    ? data.nodes[0].variants.edges[this.state.variantSelected].node.image.originalSrc\r\n                                                    : data.nodes[0].images.edges[0].node.originalSrc\r\n                                            }\r\n                                            alt={\r\n                                                data.nodes[0].variants.edges[this.state.variantSelected].node.image\r\n                                                    ? data.nodes[0].variants.edges[this.state.variantSelected].node.image.altText\r\n                                                    : data.nodes[0].images.edges[0].node.altText\r\n                                            }\r\n                                        />\r\n                                        <TextField\r\n                                            readOnly={false}\r\n                                            value={data.nodes[0].variants.edges[this.state.variantSelected].node.displayName}\r\n                                            onChange={this.handleTextChange('email')}\r\n                                            label=\"Product Name\"\r\n                                            type=\"text\"\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            readOnly={false}\r\n                                            value={data.nodes[0].variants.edges[this.state.variantSelected].node.price}\r\n                                            onChange={this.handleTextChange('email')}\r\n                                            label=\"Original Price\"\r\n                                            type=\"text\"\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            readOnly={false}\r\n                                            value={data.nodes[0].variants.edges[this.state.variantSelected].node.compareAtPrice}\r\n                                            onChange={this.handleTextChange('email')}\r\n                                            label=\"Discounted Price\"\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </FormLayout>\r\n                                </Form>\r\n                                )}\r\n                        </Page>\r\n                    )\r\n                }}\r\n                    </Query>\r\n        );\r\n    }\r\n\r\n    redirect = () => {\r\n        this.props.variantCreated(false)\r\n    };\r\n\r\n    itemToBeConsumed = () => {\r\n        const item = store.get('item');\r\n        const price = item.variants.edges[0].node.price;\r\n        const variantId = item.variants.edges[0].node.id;\r\n        const discounter = price * 0.1;\r\n        this.setState({ price, variantId });\r\n        return (price - discounter).toFixed(2);\r\n    };\r\n\r\n    handleTextChange = (value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    handleProductOrVariantSelectChange = newValue => {\r\n        this.setState({ productSelected: newValue });\r\n    };\r\n\r\n    handleVariantSelectChange = newValue => {\r\n        this.setState({variantSelected: newValue});\r\n        console.log(this.state.variantSelected);\r\n    };\r\n\r\n    handleProductSubmit = () => {\r\n\r\n    };\r\n\r\n    handleVariantSubmit = () => {\r\n\r\n    };\r\n\r\n    handleSave = () => {\r\n\r\n    }\r\n}\r\n\r\nexport default CreateTestVariant;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        descriptionHtml\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Button, Checkbox, EmptyState, Form, FormLayout, Layout, Page, TextField, Thumbnail } from '@shopify/polaris';\nimport { Context } from \"@shopify/app-bridge-react\";\nimport { Redirect } from \"@shopify/app-bridge/actions\";\nimport store from \"store-js\";\nimport { Query } from \"react-apollo\";\nvar GET_PRODUCT_BY_ID = gql(_templateObject());\n\nvar CreateTestVariant =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateTestVariant, _React$Component);\n\n  function CreateTestVariant() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateTestVariant);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateTestVariant)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      newsletter: false,\n      email: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"redirect\", function () {\n      _this.props.variantCreated(false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get('item');\n      var price = item.variants.edges[0].node.price;\n      var variantId = item.variants.edges[0].node.id;\n      var discounter = price * 0.1;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return (price - discounter).toFixed(2);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(CreateTestVariant, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          newsletter = _this$state.newsletter,\n          email = _this$state.email;\n      var app = this.context;\n      return React.createElement(Query, {\n        query: GET_PRODUCT_BY_ID,\n        variables: {\n          ids: store.get('ids')\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n\n        if (loading) {\n          return React.createElement(\"div\", null, \"Loading\\u2026\");\n        }\n\n        if (error) {\n          return React.createElement(\"div\", null, error.message);\n        }\n\n        console.log(data);\n        return React.createElement(Form, {\n          onSubmit: _this2.redirect\n        }, React.createElement(FormLayout, null, React.createElement(Thumbnail, {\n          source: data.nodes.images.edges[0] ? data.nodes.images.edges[0].node.originalSrc : '',\n          alt: data.nodes.images.edges[0] ? data.nodes.images.edges[0].node.altText : ''\n        }), React.createElement(TextField, {\n          value: data.nodes.title,\n          placeholder: data.nodes.title,\n          onChange: _this2.handleChange('email'),\n          label: \"Product Name\",\n          type: \"text\"\n        }), React.createElement(TextField, {\n          value: data.nodes.title,\n          placeholder: data.nodes.title,\n          onChange: _this2.handleChange('email'),\n          label: \"Description\",\n          type: \"text\"\n        }), React.createElement(TextField, {\n          value: data.nodes.title,\n          placeholder: data.nodes.title,\n          onChange: _this2.handleChange('email'),\n          label: \"Original Price\",\n          type: \"text\"\n        }), React.createElement(TextField, {\n          value: data.nodes.title,\n          placeholder: data.nodes.title,\n          onChange: _this2.handleChange('email'),\n          label: \"Discounted Price\",\n          type: \"text\"\n        }), React.createElement(Button, {\n          submit: true\n        }, \"Submit\")));\n      });\n    }\n  }]);\n\n  return CreateTestVariant;\n}(React.Component);\n\n_defineProperty(CreateTestVariant, \"contextType\", Context);\n\nexport default CreateTestVariant;","map":{"version":3,"sources":["C:\\Users\\Oliver\\Shopify\\Seamless AB Testing\\components\\CreateTestVariant.js"],"names":["gql","Button","Checkbox","EmptyState","Form","FormLayout","Layout","Page","TextField","Thumbnail","Context","Redirect","store","Query","GET_PRODUCT_BY_ID","CreateTestVariant","newsletter","email","props","variantCreated","item","get","price","variants","edges","node","variantId","id","discounter","setState","toFixed","field","value","state","app","context","ids","data","loading","error","message","console","log","redirect","nodes","images","originalSrc","altText","title","handleChange","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,UAA3B,EAAuCC,IAAvC,EAA6CC,UAA7C,EAAyDC,MAAzD,EAAiEC,IAAjE,EAAuEC,SAAvE,EAAkFC,SAAlF,QAAmG,kBAAnG;AACA,SAAQC,OAAR,QAAsB,2BAAtB;AACA,SAAQC,QAAR,QAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAAQC,KAAR,QAAoB,cAApB;AAEA,IAAMC,iBAAiB,GAAGd,GAAH,mBAAvB;;IA6BMe,iB;;;;;;;;;;;;;;;;;;4DAEM;AACJC,MAAAA,UAAU,EAAE,KADR;AAEJC,MAAAA,KAAK,EAAE;AAFH,K;;+DAuEG,YAAM;AACb,YAAKC,KAAL,CAAWC,cAAX,CAA0B,KAA1B;AACH,K;;uEAEkB,YAAM;AACrB,UAAMC,IAAI,GAAGR,KAAK,CAACS,GAAN,CAAU,MAAV,CAAb;AACA,UAAMC,KAAK,GAAGF,IAAI,CAACG,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BH,KAA1C;AACA,UAAMI,SAAS,GAAGN,IAAI,CAACG,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BE,EAA9C;AACA,UAAMC,UAAU,GAAGN,KAAK,GAAG,GAA3B;;AACA,YAAKO,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAALA,KAAF;AAASI,QAAAA,SAAS,EAATA;AAAT,OAAd;;AACA,aAAO,CAACJ,KAAK,GAAGM,UAAT,EAAqBE,OAArB,CAA6B,CAA7B,CAAP;AACH,K;;mEAEc,UAACC,KAAD,EAAW;AACtB,aAAO,UAACC,KAAD;AAAA,eAAW,MAAKH,QAAL,qBAAgBE,KAAhB,EAAwBC,KAAxB,EAAX;AAAA,OAAP;AACH,K;;;;;;;6BAjFQ;AAAA;;AAAA,wBACuB,KAAKC,KAD5B;AAAA,UACEjB,UADF,eACEA,UADF;AAAA,UACcC,KADd,eACcA,KADd;AAEL,UAAMiB,GAAG,GAAG,KAAKC,OAAjB;AAEA,aACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAErB,iBAAd;AAAiC,QAAA,SAAS,EAAE;AAAEsB,UAAAA,GAAG,EAAExB,KAAK,CAACS,GAAN,CAAU,KAAV;AAAP;AAA5C,SACK,gBAA8B;AAAA,YAA3BgB,IAA2B,QAA3BA,IAA2B;AAAA,YAArBC,OAAqB,QAArBA,OAAqB;AAAA,YAAZC,KAAY,QAAZA,KAAY;;AAC3B,YAAID,OAAJ,EAAa;AAAE,iBAAO,iDAAP;AAA6B;;AAC5C,YAAIC,KAAJ,EAAW;AAAE,iBAAO,iCAAMA,KAAK,CAACC,OAAZ,CAAP;AAAoC;;AACjDC,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,eACR,oBAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,MAAI,CAACM;AAArB,WACI,oBAAC,UAAD,QACI,oBAAC,SAAD;AACI,UAAA,MAAM,EACFN,IAAI,CAACO,KAAL,CAAWC,MAAX,CAAkBrB,KAAlB,CAAwB,CAAxB,IACMa,IAAI,CAACO,KAAL,CAAWC,MAAX,CAAkBrB,KAAlB,CAAwB,CAAxB,EAA2BC,IAA3B,CAAgCqB,WADtC,GAEM,EAJd;AAMI,UAAA,GAAG,EACCT,IAAI,CAACO,KAAL,CAAWC,MAAX,CAAkBrB,KAAlB,CAAwB,CAAxB,IACMa,IAAI,CAACO,KAAL,CAAWC,MAAX,CAAkBrB,KAAlB,CAAwB,CAAxB,EAA2BC,IAA3B,CAAgCsB,OADtC,GAEM;AATd,UADJ,EAaI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAEV,IAAI,CAACO,KAAL,CAAWI,KADtB;AAEI,UAAA,WAAW,EAAEX,IAAI,CAACO,KAAL,CAAWI,KAF5B;AAGI,UAAA,QAAQ,EAAE,MAAI,CAACC,YAAL,CAAkB,OAAlB,CAHd;AAII,UAAA,KAAK,EAAC,cAJV;AAKI,UAAA,IAAI,EAAC;AALT,UAbJ,EAqBI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAEZ,IAAI,CAACO,KAAL,CAAWI,KADtB;AAEI,UAAA,WAAW,EAAEX,IAAI,CAACO,KAAL,CAAWI,KAF5B;AAGI,UAAA,QAAQ,EAAE,MAAI,CAACC,YAAL,CAAkB,OAAlB,CAHd;AAII,UAAA,KAAK,EAAC,aAJV;AAKI,UAAA,IAAI,EAAC;AALT,UArBJ,EA6BI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAEZ,IAAI,CAACO,KAAL,CAAWI,KADtB;AAEI,UAAA,WAAW,EAAEX,IAAI,CAACO,KAAL,CAAWI,KAF5B;AAGI,UAAA,QAAQ,EAAE,MAAI,CAACC,YAAL,CAAkB,OAAlB,CAHd;AAII,UAAA,KAAK,EAAC,gBAJV;AAKI,UAAA,IAAI,EAAC;AALT,UA7BJ,EAqCI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAEZ,IAAI,CAACO,KAAL,CAAWI,KADtB;AAEI,UAAA,WAAW,EAAEX,IAAI,CAACO,KAAL,CAAWI,KAF5B;AAGI,UAAA,QAAQ,EAAE,MAAI,CAACC,YAAL,CAAkB,OAAlB,CAHd;AAII,UAAA,KAAK,EAAC,kBAJV;AAKI,UAAA,IAAI,EAAC;AALT,UArCJ,EA6CI,oBAAC,MAAD;AAAQ,UAAA,MAAM;AAAd,oBA7CJ,CADJ,CADQ;AAmDH,OAxDL,CADJ;AA4DH;;;;EAvE2BC,KAAK,CAACC,S;;gBAAhCpC,iB,iBACmBL,O;;AA0FzB,eAAeK,iBAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport { Button, Checkbox, EmptyState, Form, FormLayout, Layout, Page, TextField, Thumbnail } from '@shopify/polaris';\r\nimport {Context} from \"@shopify/app-bridge-react\";\r\nimport {Redirect} from \"@shopify/app-bridge/actions\";\r\nimport store from \"store-js\";\r\nimport {Query} from \"react-apollo\";\r\n\r\nconst GET_PRODUCT_BY_ID = gql`\r\n  query getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n      ... on Product {\r\n        title\r\n        handle\r\n        descriptionHtml\r\n        id\r\n        images(first: 1) {\r\n          edges {\r\n            node {\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 1) {\r\n          edges {\r\n            node {\r\n              price\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass CreateTestVariant extends React.Component {\r\n    static contextType = Context;\r\n    state = {\r\n        newsletter: false,\r\n        email: '',\r\n    };\r\n\r\n    render() {\r\n        const {newsletter, email} = this.state;\r\n        const app = this.context;\r\n\r\n        return (\r\n            <Query query={GET_PRODUCT_BY_ID} variables={{ ids: store.get('ids') }}>\r\n                {({ data, loading, error }) => {\r\n                    if (loading) { return <div>Loading…</div>; }\r\n                    if (error) { return <div>{error.message}</div>; }\r\n                    console.log(data);\r\n                    return(\r\n            <Form onSubmit={this.redirect}>\r\n                <FormLayout>\r\n                    <Thumbnail\r\n                        source={\r\n                            data.nodes.images.edges[0]\r\n                                ? data.nodes.images.edges[0].node.originalSrc\r\n                                : ''\r\n                        }\r\n                        alt={\r\n                            data.nodes.images.edges[0]\r\n                                ? data.nodes.images.edges[0].node.altText\r\n                                : ''\r\n                        }\r\n                    />\r\n                    <TextField\r\n                        value={data.nodes.title}\r\n                        placeholder={data.nodes.title}\r\n                        onChange={this.handleChange('email')}\r\n                        label=\"Product Name\"\r\n                        type=\"text\"\r\n                    />\r\n\r\n                    <TextField\r\n                        value={data.nodes.title}\r\n                        placeholder={data.nodes.title}\r\n                        onChange={this.handleChange('email')}\r\n                        label=\"Description\"\r\n                        type=\"text\"\r\n                    />\r\n\r\n                    <TextField\r\n                        value={data.nodes.title}\r\n                        placeholder={data.nodes.title}\r\n                        onChange={this.handleChange('email')}\r\n                        label=\"Original Price\"\r\n                        type=\"text\"\r\n                    />\r\n\r\n                    <TextField\r\n                        value={data.nodes.title}\r\n                        placeholder={data.nodes.title}\r\n                        onChange={this.handleChange('email')}\r\n                        label=\"Discounted Price\"\r\n                        type=\"text\"\r\n                    />\r\n\r\n                    <Button submit>Submit</Button>\r\n                </FormLayout>\r\n            </Form>\r\n                    )\r\n                }}\r\n                    </Query>\r\n        );\r\n    }\r\n\r\n    redirect = () => {\r\n        this.props.variantCreated(false)\r\n    };\r\n\r\n    itemToBeConsumed = () => {\r\n        const item = store.get('item');\r\n        const price = item.variants.edges[0].node.price;\r\n        const variantId = item.variants.edges[0].node.id;\r\n        const discounter = price * 0.1;\r\n        this.setState({ price, variantId });\r\n        return (price - discounter).toFixed(2);\r\n    };\r\n\r\n    handleChange = (field) => {\r\n        return (value) => this.setState({[field]: value});\r\n    };\r\n}\r\n\r\nexport default CreateTestVariant;"]},"metadata":{},"sourceType":"module"}
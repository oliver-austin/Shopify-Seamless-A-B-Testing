{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        description\\n        id\\n        totalVariants\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 10) {\\n          edges {\\n            node {\\n              price\\n              id\\n              image {\\n                originalSrc\\n                altText\\n              }\\n              displayName\\n              compareAtPrice\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query getShopID {\\n            shop{\\n                id\\n            }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Button, Caption, Card, Checkbox, DropZone, EmptyState, Form, FormLayout, Heading, Layout, Page, ResourceList, Select, Stack, Subheading, TextField, Thumbnail } from '@shopify/polaris';\nimport { Context } from \"@shopify/app-bridge-react\";\nimport { Redirect } from \"@shopify/app-bridge/actions\";\nimport store from \"store-js\";\nimport { Query } from \"react-apollo\";\nimport Product from \"../data_classes/product/Product\";\nimport Variant from \"../data_classes/variant/Variant\";\nimport Modal from \"@shopify/app-bridge-react/components/Modal\";\nimport ResourceListWithProducts from \"../components/ResourceList\";\nimport $ from \"jquery\"; //TODO: fetch all variants, not first 10\n\nvar GET_SHOP_ID = gql(_templateObject());\nvar GET_PRODUCT_BY_ID = gql(_templateObject2());\n\nvar CreateTestVariant =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateTestVariant, _React$Component);\n\n  function CreateTestVariant(props) {\n    var _this;\n\n    _classCallCheck(this, CreateTestVariant);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateTestVariant).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"redirect\", function () {\n      _this.props.variantCreated(false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get('item');\n      var price = item.variants.edges[0].node.price;\n      var variantId = item.variants.edges[0].node.id;\n      var discounter = price * 0.1;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return (price - discounter).toFixed(2);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTextChange\", function (value) {\n      _this.setState({\n        value: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleProductOrVariantSelectChange\", function (data, newValue) {\n      _this.setState({\n        productTitle: data.nodes[0].title,\n        productDescription: data.nodes[0].description,\n        productSelected: newValue,\n        variantTitle: data.nodes[0].variants.edges[0].node.displayName,\n        variantPrice: data.nodes[0].variants.edges[0].node.price,\n        variantDiscount: data.nodes[0].variants.edges[0].node.compareAtPrice\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVariantSelectChange\", function (variantsArray, newValue) {\n      newValue = _parseInt(newValue, 10);\n\n      _this.setState({\n        variantSelected: newValue,\n        variantTitle: variantsArray[newValue].node.displayName,\n        variantPrice: variantsArray[newValue].node.price,\n        variantDiscount: variantsArray[newValue].node.compareAtPrice\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleProductOrVariantSubmit\", function (data, shopID) {\n      //data param is retrieved from gql, \"old data\", new data is stored in this.state\n      //send all relevant fields form old and new data with request\n      switch (_this.state.productSelected) {\n        case \"product\":\n          var product = new Product(data.nodes[0].id, shopID, data.nodes[0].title, data.nodes[0].images.edges[0].node.originalSrc, data.nodes[0].description, 0, 0, 0, _this.state.productTitle, _this.state.productImage, _this.state.productDescription, 0, 0, 0, 1);\n          $.ajax({\n            type: \"POST\",\n            url: \"/create-product-test\",\n            contentType: \"application/json; charset=utf-8\",\n            data: _JSON$stringify(product),\n            dataType: 'text'\n          });\n          break;\n\n        case \"variants\":\n          var variant = new Variant(data.nodes[0].variants.edges[_this.state.variantSelected].node.id, data.nodes[0].id, shopID, data.nodes[0].variants.edges[_this.state.variantSelected].node.displayName, data.nodes[0].variants.edges[_this.state.variantSelected].node.image ? data.nodes[0].variants.edges[_this.state.variantSelected].node.image.originalSrc : data.nodes[0].images.edges[0].node.originalSrc, data.nodes[0].variants.edges[_this.state.variantSelected].node.price, data.nodes[0].variants.edges[_this.state.variantSelected].node.compareAtPrice, 0, 0, 0, _this.state.variantTitle, _this.state.variantImage, _this.state.variantPrice, _this.state.variantDiscount, 0, 0, 0, 1);\n          $.ajax({\n            type: \"POST\",\n            url: \"/create-variant-test\",\n            contentType: \"application/json; charset=utf-8\",\n            data: _JSON$stringify(variant),\n            dataType: 'json'\n          });\n      }\n    });\n\n    _this.state = {\n      files: [],\n      productSelected: 'product',\n      variantSelected: 0,\n      productTitle: '',\n      productDescription: '',\n      productImage: '',\n      variantTitle: '',\n      variantImage: '',\n      variantPrice: '',\n      variantDiscount: ''\n    };\n    return _this;\n  }\n\n  _createClass(CreateTestVariant, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var productOrVariantSelectOptions = [{\n        label: 'Product',\n        value: 'product'\n      }, {\n        label: 'Variants',\n        value: 'variants'\n      }];\n      var app = this.context;\n      var files = this.state.files;\n      var validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n      console.log(this.state.files);\n\n      if (this.state.files.length != 0) {\n        console.log(window.URL.createObjectURL(this.state.files[0]));\n      }\n\n      var fileUpload = !files.length && React.createElement(DropZone.FileUpload, null);\n      var uploadedFiles = files.length > 0 && React.createElement(Stack, {\n        vertical: true\n      }, files.map(function (file, index) {\n        return React.createElement(Stack, {\n          alignment: \"center\",\n          key: index\n        }, React.createElement(Thumbnail, {\n          size: \"large\",\n          alt: file.name,\n          source: validImageTypes.indexOf(file.type) > 0 ? window.URL.createObjectURL(file) : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\n        }), React.createElement(\"div\", null, file.name, \" \", React.createElement(Caption, null, file.size, \" bytes\")));\n      }));\n      return React.createElement(Query, {\n        query: GET_PRODUCT_BY_ID,\n        variables: {\n          ids: store.get('ids')\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n\n        if (loading) {\n          return React.createElement(\"div\", null, \"Loading\\u2026\");\n        }\n\n        if (error) {\n          return React.createElement(\"div\", null, error.message);\n        }\n\n        var variantsArray = data.nodes[0].variants.edges;\n        var variantSelectOptions = [];\n        variantsArray.forEach(function (variant, index) {\n          variantSelectOptions.push({\n            label: variant.node.displayName,\n            value: index\n          });\n        });\n        return React.createElement(Query, {\n          query: GET_SHOP_ID\n        }, function (_ref2) {\n          var shop = _ref2.data.shop,\n              loading = _ref2.loading,\n              error = _ref2.error;\n\n          if (loading) {\n            return React.createElement(\"div\", null, \"Loading\\u2026\");\n          }\n\n          if (error) {\n            return React.createElement(\"div\", null, error.message);\n          }\n\n          console.log(\"ID\", shop.id);\n          return React.createElement(Page, {\n            primaryAction: {\n              content: 'Create A/B Test',\n              onAction: function onAction() {\n                return _this2.handleProductOrVariantSubmit(data, shop.id);\n              }\n            }\n          }, React.createElement(Select, {\n            label: \"Create test for:\",\n            disabled: false,\n            options: productOrVariantSelectOptions,\n            onChange: _this2.handleProductOrVariantSelectChange.bind(_this2, data),\n            value: _this2.state.productSelected\n          }), _this2.state.productSelected === 'product' ? React.createElement(Form, null, React.createElement(FormLayout, null, React.createElement(Stack, null, React.createElement(Thumbnail, {\n            size: \"large\",\n            source: data.nodes[0].images.edges[0] ? data.nodes[0].images.edges[0].node.originalSrc : '',\n            alt: data.nodes[0].images.edges[0] ? data.nodes[0].images.edges[0].node.altText : ''\n          }), React.createElement(DropZone, {\n            onDrop: function onDrop(files, acceptedFiles, rejectedFiles) {\n              _this2.setState({\n                files: [].concat(_toConsumableArray(_this2.state.files), _toConsumableArray(acceptedFiles))\n              });\n            }\n          }, uploadedFiles, fileUpload)), React.createElement(TextField, {\n            readOnly: false,\n            value: _this2.state.productTitle,\n            onChange: _this2.handleTextChange,\n            label: \"Product Name\",\n            type: \"text\"\n          }), React.createElement(TextField, {\n            readOnly: false,\n            value: _this2.state.productDescription,\n            onChange: _this2.handleTextChange,\n            label: \"Product Description\",\n            type: \"text\"\n          }))) : React.createElement(Form, null, React.createElement(FormLayout, null, React.createElement(Select, {\n            label: \"Select product variant to create test for:\",\n            disabled: false,\n            options: variantSelectOptions,\n            value: _this2.state.variantSelected,\n            onChange: _this2.handleVariantSelectChange.bind(_this2, variantsArray)\n          }), React.createElement(Stack, null, React.createElement(Thumbnail, {\n            size: \"large\",\n            source: data.nodes[0].variants.edges[_this2.state.variantSelected].node.image ? data.nodes[0].variants.edges[_this2.state.variantSelected].node.image.originalSrc : data.nodes[0].images.edges[0].node.originalSrc,\n            alt: data.nodes[0].variants.edges[_this2.state.variantSelected].node.image ? data.nodes[0].variants.edges[_this2.state.variantSelected].node.image.altText : data.nodes[0].images.edges[0].node.altText\n          }), React.createElement(DropZone, {\n            onDrop: function onDrop(files, acceptedFiles, rejectedFiles) {\n              _this2.setState({\n                files: [].concat(_toConsumableArray(_this2.state.files), _toConsumableArray(acceptedFiles))\n              });\n            }\n          }, uploadedFiles, fileUpload)), React.createElement(TextField, {\n            readOnly: false,\n            value: _this2.state.variantTitle,\n            onChange: _this2.handleTextChange,\n            label: \"Product Name\",\n            type: \"text\"\n          }), React.createElement(TextField, {\n            readOnly: false,\n            value: _this2.state.variantPrice,\n            onChange: _this2.handleTextChange,\n            label: \"Original Price\",\n            type: \"text\"\n          }), React.createElement(TextField, {\n            readOnly: false,\n            value: _this2.state.variantDiscount,\n            onChange: _this2.handleTextChange,\n            label: \"Discounted Price\",\n            type: \"text\"\n          }))));\n        });\n      });\n    }\n  }]);\n\n  return CreateTestVariant;\n}(React.Component);\n\n_defineProperty(CreateTestVariant, \"contextType\", Context);\n\nexport default CreateTestVariant;","map":null,"metadata":{},"sourceType":"module"}
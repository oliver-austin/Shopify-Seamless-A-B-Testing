{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        descriptionHtml\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport * as PropTypes from 'prop-types';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nvar ResourceListWithProducts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  function ResourceListWithProducts() {\n    _classCallCheck(this, ResourceListWithProducts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ResourceListWithProducts).apply(this, arguments));\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/edit-products');\n      };\n\n      var twoWeeksFromNow = new Date(_Date$now() + 12096e5).toDateString();\n      return React.createElement(Query, {\n        query: GET_PRODUCTS_BY_ID,\n        variables: {\n          ids: store.get('ids')\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n\n        if (loading) {\n          return React.createElement(\"div\", null, \"Loading\\u2026\");\n        }\n\n        if (error) {\n          return React.createElement(\"div\", null, error.message);\n        }\n\n        console.log(data);\n        return React.createElement(Card, null, React.createElement(ResourceList, {\n          showHeader: true,\n          resourceName: {\n            singular: 'Product',\n            plural: 'Products'\n          },\n          items: data.nodes,\n          renderItem: function renderItem(item) {\n            var media = React.createElement(Thumbnail, {\n              source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n              alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n            });\n            var price = item.variants.edges[0].node.price;\n            return React.createElement(ResourceList.Item, {\n              id: item.id,\n              media: media,\n              accessibilityLabel: \"View details for \".concat(item.title),\n              onClick: function onClick() {\n                store.set('item', item);\n                redirectToProduct();\n              }\n            }, React.createElement(Stack, null, React.createElement(Stack.Item, {\n              fill: true\n            }, React.createElement(\"h3\", null, React.createElement(TextStyle, {\n              variation: \"strong\"\n            }, item.title))), React.createElement(Stack.Item, null, React.createElement(\"p\", null, \"$\", price)), React.createElement(Stack.Item, null, React.createElement(\"p\", null, \"Expires on \", twoWeeksFromNow, \" \"))));\n          }\n        }));\n      });\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["C:\\Users\\Oliver\\Shopify\\Seamless AB Testing\\components\\ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","PropTypes","GET_PRODUCTS_BY_ID","ResourceListWithProducts","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","twoWeeksFromNow","Date","toDateString","ids","get","data","loading","error","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title","set","React","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport {\r\n  Card,\r\n  ResourceList,\r\n  Stack,\r\n  TextStyle,\r\n  Thumbnail,\r\n} from '@shopify/polaris';\r\nimport store from 'store-js';\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport { Context } from '@shopify/app-bridge-react';\r\n\r\nimport * as PropTypes from 'prop-types';\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n  query getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n      ... on Product {\r\n        title\r\n        handle\r\n        descriptionHtml\r\n        id\r\n        images(first: 1) {\r\n          edges {\r\n            node {\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 1) {\r\n          edges {\r\n            node {\r\n              price\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass ResourceListWithProducts extends React.Component {\r\n  static contextType = Context;\r\n\r\n  render() {\r\n    const app = this.context;\r\n    const redirectToProduct = () => {\r\n      const redirect = Redirect.create(app);\r\n      redirect.dispatch(\r\n        Redirect.Action.APP,\r\n        '/edit-products',\r\n      );\r\n    };\r\n\r\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\r\n    return (\r\n      <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\r\n        {({ data, loading, error }) => {\r\n          if (loading) { return <div>Loadingâ€¦</div>; }\r\n          if (error) { return <div>{error.message}</div>; }\r\n          console.log(data);\r\n          return (\r\n            <Card>\r\n              <ResourceList\r\n                showHeader\r\n                resourceName={{ singular: 'Product', plural: 'Products' }}\r\n                items={data.nodes}\r\n                renderItem={(item) => {\r\n                  const media = (\r\n                    <Thumbnail\r\n                      source={\r\n                        item.images.edges[0]\r\n                          ? item.images.edges[0].node.originalSrc\r\n                          : ''\r\n                      }\r\n                      alt={\r\n                        item.images.edges[0]\r\n                          ? item.images.edges[0].node.altText\r\n                          : ''\r\n                      }\r\n                    />\r\n                  );\r\n                  const price = item.variants.edges[0].node.price;\r\n                  return (\r\n                    <ResourceList.Item\r\n                      id={item.id}\r\n                      media={media}\r\n                      accessibilityLabel={`View details for ${item.title}`}\r\n                      onClick={() => {\r\n                        store.set('item', item);\r\n                        redirectToProduct();\r\n                      }\r\n                      }\r\n                    >\r\n                      <Stack>\r\n                        <Stack.Item fill>\r\n                          <h3>\r\n                            <TextStyle variation=\"strong\">\r\n                              {item.title}\r\n                            </TextStyle>\r\n                          </h3>\r\n                        </Stack.Item>\r\n                        <Stack.Item>\r\n                          <p>${price}</p>\r\n                        </Stack.Item>\r\n                        <Stack.Item>\r\n                          <p>Expires on {twoWeeksFromNow} </p>\r\n                        </Stack.Item>\r\n                      </Stack>\r\n                    </ResourceList.Item>\r\n                  );\r\n                }}\r\n              />\r\n            </Card>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResourceListWithProducts;\r\n"]},"metadata":{},"sourceType":"module"}
import * as tslib_1 from "tslib";
import * as React from 'react';
import { autobind } from '@shopify/javascript-utilities/decorators';
import { classNames } from '@shopify/react-utilities/styles';
import { layer } from '../../../shared';
import PositionedOverlay from '../../../PositionedOverlay';
import styles from '../../Tooltip.scss';
export default class TooltipOverlay extends React.PureComponent {
    render() {
        const markup = this.props.active ? this.renderOverlay() : null;
        return markup;
    }
    renderOverlay() {
        const { active, activator, preferredPosition = 'below' } = this.props;
        return (<PositionedOverlay active={active} activator={activator} preferredPosition={preferredPosition} render={this.renderTooltip}/>);
    }
    renderTooltip(overlayDetails) {
        const { measuring, desiredHeight, positioning } = overlayDetails;
        const { id, children, light } = this.props;
        const containerClassName = classNames(styles.Tooltip, light && styles.light, measuring && styles.measuring, positioning === 'above' && styles.positionedAbove);
        const contentStyles = measuring ? undefined : { maxHeight: desiredHeight };
        return (<div className={containerClassName} {...layer.props}>
        <div className={styles.Wrapper}>
          <div id={id} role="tooltip" className={styles.Content} style={contentStyles}>
            {children}
          </div>
        </div>
      </div>);
    }
}
tslib_1.__decorate([
    autobind
], TooltipOverlay.prototype, "renderOverlay", null);
tslib_1.__decorate([
    autobind
], TooltipOverlay.prototype, "renderTooltip", null);

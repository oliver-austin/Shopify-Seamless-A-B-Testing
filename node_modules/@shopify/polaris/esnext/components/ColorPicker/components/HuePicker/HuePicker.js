import * as tslib_1 from "tslib";
import * as React from 'react';
import { autobind } from '@shopify/javascript-utilities/decorators';
import Slidable from '../Slidable';
import styles from '../../ColorPicker.scss';
import { calculateDraggerY, hueForDraggerY } from './utilities';
export default class HuePicker extends React.PureComponent {
    constructor() {
        super(...arguments);
        this.state = {
            sliderHeight: 0,
            draggerHeight: 0,
        };
    }
    render() {
        const { hue } = this.props;
        const { sliderHeight, draggerHeight } = this.state;
        const draggerY = calculateDraggerY(hue, sliderHeight, draggerHeight);
        return (<div className={styles.HuePicker} ref={this.setSliderHeight}>
        <Slidable draggerY={draggerY} draggerX={0} onChange={this.handleChange} onDraggerHeight={this.setDraggerHeight}/>
      </div>);
    }
    setSliderHeight(node) {
        if (node == null) {
            return;
        }
        this.setState({ sliderHeight: node.clientHeight });
        if (process.env.NODE_ENV === 'development') {
            setTimeout(() => {
                this.setState({ sliderHeight: node.clientHeight });
            }, 0);
        }
    }
    setDraggerHeight(height) {
        this.setState({
            draggerHeight: height,
        });
    }
    handleChange({ y }) {
        const { onChange } = this.props;
        const { sliderHeight } = this.state;
        const hue = hueForDraggerY(y, sliderHeight);
        onChange(hue);
    }
}
tslib_1.__decorate([
    autobind
], HuePicker.prototype, "setSliderHeight", null);
tslib_1.__decorate([
    autobind
], HuePicker.prototype, "setDraggerHeight", null);
tslib_1.__decorate([
    autobind
], HuePicker.prototype, "handleChange", null);
